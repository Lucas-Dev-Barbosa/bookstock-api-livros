#Para teste em banco local com a API fora do container
spring.datasource.url=jdbc:mysql://${URL_DATABASE:localhost}/dbBookStock?createDatabaseIfNotExist=true&useTimezone=true&serverTimezone=GMT
spring.datasource.username=${USER_DATABASE:BK_USER}
spring.datasource.password=${PASSWORD_DATABASE:BK_123456}

#JPA
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true
spring.jpa.show-sql=true

#Servidor
server.port=8081

#Basepath
server.servlet.context-path=/bookstock/api/livros

#URL de validacao de token
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://${URL_AUTH_SERVER:localhost:8080}/realms/bookstock/protocol/openid-connect/certs

#Swagger
springdoc.api-docs.path=/api-docs

#URL do Eureka Server
spring.application.name=livros-service
eureka.instance.hostname=localhost
eureka.client.service-url.default-zone=http://${URL_SERVICE_DISCOVERY:localhost:8761}
eureka.client.healthcheck.enabled=true
eureka.instance.instance-id=${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
eureka.instance.metadata-map.management.context-path=${server.servlet.context-path}/actuator

#Actuator
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=beans, conditions, mappings, refresh